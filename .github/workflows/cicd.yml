name: Ecommerce Database CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  mysql-test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD || 'root' }}
          MYSQL_DATABASE: kenya_ecommerce
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: 🕒 Wait for MySQL to be ready
        timeout-minutes: 2
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h127.0.0.1 -uroot -p${{ secrets.DB_PASSWORD || 'root' }} --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL ($i/30)..."
            sleep 2
          done

      - name: 🔧 Install MySQL client
        run: sudo apt-get update && sudo apt-get install -y mysql-client

      - name: ♻️ Clean existing database
        run: |
          echo "♻️ Dropping and recreating database..."
          mysql -h 127.0.0.1 -u root -p${{ secrets.DB_PASSWORD || 'root' }} \
            -e "DROP DATABASE IF EXISTS kenya_ecommerce; CREATE DATABASE kenya_ecommerce;" \
            --batch --silent
          echo "✅ Database reset complete"

      - name: 📦 Apply kenyan ecommerce schema
        run: |
          echo "📦 Applying schema..."
          mysql -h 127.0.0.1 -u root -p${{ secrets.DB_PASSWORD || 'root' }} \
            kenya_ecommerce < ecommerce_schema.sql \
            --batch --silent
          echo "✅ Schema applied successfully"

      - name: 🗂 Verify schema structure
        run: |
          echo "📋 Listing all tables:"
          mysql -h 127.0.0.1 -u root -p${{ secrets.DB_PASSWORD || 'root' }} \
            kenya_ecommerce -e "SHOW TABLES;" --table


      - name: 🚀 Execute test queries
        run: |
          if [ -d "queries" ]; then
            for file in queries/*.sql; do
              echo -e "\n▶️ Testing: $(basename "$file")"
              mysql -h 127.0.0.1 -u root -p${{ secrets.DB_PASSWORD || 'root' }} \
                kenya_ecommerce < "$file" --table || exit 1
            done
          else
            echo "ℹ️ No queries directory found"
          fi

      - name: 💾 Create database dump
        if: github.ref == 'refs/heads/main'
        run: |
          mkdir -p db_dumps
          timestamp=$(date +%Y%m%d_%H%M%S)
          dump_file="db_dumps/kenya_ecommerce_$timestamp.sql"
          
          echo "📦 Creating dump: $dump_file"
          mysqldump -h 127.0.0.1 -u root -p${{ secrets.DB_PASSWORD || 'root' }} \
            --no-tablespaces \
            --skip-comments \
            --compact \
            kenya_ecommerce > "$dump_file"
          
          # Create latest.sql symlink
          ln -sf "$dump_file" db_dumps/latest.sql
          echo "✅ Dump created successfully"

      - name: 📤 Upload artifacts
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: database-dumps
          path: |
            db_dumps/*.sql
            db_dumps/latest.sql
          retention-days: 7

      - name: 🔄 Update repository
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add db_dumps/
          git commit -m "📦 Update database dump [skip ci]" || echo "⏩ No changes to commit"
          git pull --rebase
          git push origin HEAD:main
